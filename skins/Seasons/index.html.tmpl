## Copyright 2009-2018 Tom Keffer, Matthew Wall
## Distributed under terms of GPLv3.  See LICENSE.txt for your rights.
#errorCatcher Echo
##
## Specifying an encoding of UTF-8 is usually safe:
#encoding UTF-8
##

#set global graphOrder = $Extras.Graphs.order.split(',')

#def dataSettings($hasData, $image, $label)
#return {"hasData": hasData, "image": image, "alt": label}
#end def

#set global graphData = { \
  "outsideTemp":     $dataSettings(True, "tempdew.png", $obs.label.outTemp), \
  "wind":            $dataSettings(True, "wind.png", $obs.label.windSpeed), \
  "windDirection":   $dataSettings(True, "winddir.png", $obs.label.windDir), \
  "windVector":      $dataSettings(True, "windvec.png", $obs.label.windvec), \
  "rain":            $dataSettings(True, "rain.png", $obs.label.rain), \
  "feelsLikeTemp":   $dataSettings(True, "tempfeel.png", $obs.label.feel), \
  "barometer":       $dataSettings(True, "barometer.png", $obs.label.barometer), \
  "outsideHumidity": $dataSettings(True, "hum.png", $obs.label.outHumidity), \
  "uvIndex":         $dataSettings($day.UV.has_data, "uv.png", $obs.label.UV), \
  "radiation":       $dataSettings($day.radiation.has_data, "radiation.png", $obs.label.radiation), \
  "insideTemp":      $dataSettings($day.daytempin.has_data, "tempin.png", $obs.label.inTemp), \
  "insideHumidity":  $dataSettings($day.inHumidity.has_data, "humin.png", $obs.label.inHumidity), \
  "signalQuality":   $dataSettings($day.rxCheckPercent.has_data, "rx.png", $obs.label.rxCheckPercent), \
  "extraTemp":       $dataSettings($day.extraTemp1.has_data or $day.extraTemp2.has_data or $day.extraTemp3.has_data, "temp.png", $obs.label.extraTemp1) \
}

#def imgElement($key, $range)
#set data = $graphData[$key]
#if $data.hasData
<img src="$range${data.image}" alt="${data.alt}"/>
#end if
#end def

#def graphs($range)
#for $graph in $graphOrder
$imgElement($graph, $range)
#end for
#end def

<!DOCTYPE html>
<html lang="en">
  <head>
    ## This choice should match the #encoding directive above
    <meta charset="UTF-8">
    <title>$station.location</title>
    <link rel="icon" type="image/png" href="favicon.ico" />
    <link rel="stylesheet" type="text/css" href="seasons.css"/>
    <script src="seasons.js"></script>
  </head>

  <body onload="setup();">
    #include "titlebar.inc"
    
    <div id="contents">
      <div id="widget_group">
        #include "current.inc"
        #include "sunmoon.inc"
        #include "hilo.inc"
        #include "sensors.inc"
        #include "about.inc"
        #include "radar.inc"
        #include "satellite.inc"
        #include "map.inc"
      </div>

      <div id="plot_group">
        <div id="history_widget" class="widget">
          <div id="plot_title" class="widget_title">History:&nbsp;&nbsp;
            <a class="button_selected" id="button_history_day"
               onclick="choose_history('day')">Day</a>
            <a class="button" id="button_history_week"
               onclick="choose_history('week')">Week</a>
            <a class="button" id="button_history_month"
               onclick="choose_history('month')">Month</a>
            <a class="button" id="button_history_year"
               onclick="choose_history('year')">Year</a>
          </div>
          <div id="history_day" class="plot_container">
            $graphs('day')
          </div>
          <div id="history_week" class="plot_container" style="display:none">
            $graphs('week')
          </div>
          <div id="history_month" class="plot_container" style="display:none">
            $graphs('month')
          </div>
          <div id="history_year" class="plot_container" style="display:none">
            $graphs('year')
          </div>
        </div>
      </div>
    </div>

    <p class="footnote">
      This station is controlled by <a href="http://weewx.com/">WeeWX</a>, an
      experimental weather software system written in Python.
    </p>

    #include "analytics.inc"

</body>

</html>
