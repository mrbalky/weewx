## Copyright 2009-2018 Tom Keffer, Matthew Wall
## Distributed under terms of GPLv3.  See LICENSE.txt for your rights.
#errorCatcher Echo
##
## Specifying an encoding of UTF-8 is usually safe:
#encoding UTF-8
##

#set global plotOrder = $getVar('Extras.Plots.order', 'barometer,outsideTemp,feelsLikeTemp,outsideHumidity,wind,windDirection,windVector,rain,uvIndex,radiation,insideTemp,insideHumidity,extraTemp,signalQuality').replace(' ', '').split(',')

#def plotSettings($hasData, $image, $label)
#return {"hasData": hasData, "image": image, "alt": label}
#end def

## Settings of each plot. Each row of the table contains the settings
## for a plot of an individual weather reading.
##                                  +--- Is there valid data in the plot?
##                                  |        +--- The plot image to display. This is appended
##                                  |        |         to the range (day, week, month, year) to
##                                  |        |         build a full image file name. I.e. 'daywind.png'
##                                  |        |                +--- The "alt" text of the image
##                                  V        V                V
#set global plotSettings = { \
  "outsideTemp":     $plotSettings(True, "tempdew.png", $obs.label.outTemp), \
  "wind":            $plotSettings(True, "wind.png", $obs.label.windSpeed), \
  "windDirection":   $plotSettings(True, "winddir.png", $obs.label.windDir), \
  "windVector":      $plotSettings(True, "windvec.png", $obs.label.windvec), \
  "rain":            $plotSettings(True, "rain.png", $obs.label.rain), \
  "feelsLikeTemp":   $plotSettings(True, "tempfeel.png", $obs.label.feel), \
  "barometer":       $plotSettings(True, "barometer.png", $obs.label.barometer), \
  "outsideHumidity": $plotSettings(True, "hum.png", $obs.label.outHumidity), \
  "uvIndex":         $plotSettings($day.UV.has_data, "uv.png", $obs.label.UV), \
  "radiation":       $plotSettings($day.radiation.has_data, "radiation.png", $obs.label.radiation), \
  "insideTemp":      $plotSettings($day.daytempin.has_data, "tempin.png", $obs.label.inTemp), \
  "insideHumidity":  $plotSettings($day.inHumidity.has_data, "humin.png", $obs.label.inHumidity), \
  "signalQuality":   $plotSettings($day.rxCheckPercent.has_data, "rx.png", $obs.label.rxCheckPercent), \
  "extraTemp":       $plotSettings($day.extraTemp1.has_data, "temp.png", $obs.label.extraTemp1) \
}

##
## This function displays all of the requested plots for a particular range (day,week,month,year).
## Request plots and order with [[Plots]][[[order]]] in skin.conf
##
#def plots($imgPrefix)
    ## Loop through each plot to display
    #for $plot in $plotOrder
        ## Ensure we have settings for that plot
        #if $plot in $plotSettings
            ## Ensure there is valid data for that weather reading
            #if $plotSettings[$plot].hasData
                <img src="$imgPrefix${$plotSettings[$plot].image}" alt="${$plotSettings[$plot].alt}"/>
            #end if
        #else
            ## An unknown weather reading plot was present in the requested plots
            ## Show an error right on the page
            <br/>Unknown plot type $plot<br/>
        #end if
    #end for
#end def

<!DOCTYPE html>
<html lang="en">
  <head>
    ## This choice should match the #encoding directive above
    <meta charset="UTF-8">
    <title>$station.location</title>
    <link rel="icon" type="image/png" href="favicon.ico" />
    <link rel="stylesheet" type="text/css" href="seasons.css"/>
    <script src="seasons.js"></script>
  </head>

  <body onload="setup();">
    #include "titlebar.inc"
    
    <div id="contents">
      <div id="widget_group">
        #include "current.inc"
        #include "sunmoon.inc"
        #include "hilo.inc"
        #include "sensors.inc"
        #include "about.inc"
        #include "radar.inc"
        #include "satellite.inc"
        #include "map.inc"
      </div>

      <div id="plot_group">
        <div id="history_widget" class="widget">
          <div id="plot_title" class="widget_title">History:&nbsp;&nbsp;
            <a class="button_selected" id="button_history_day"
               onclick="choose_history('day')">Day</a>
            <a class="button" id="button_history_week"
               onclick="choose_history('week')">Week</a>
            <a class="button" id="button_history_month"
               onclick="choose_history('month')">Month</a>
            <a class="button" id="button_history_year"
               onclick="choose_history('year')">Year</a>
          </div>
          <div id="history_day" class="plot_container">
            $plots('day')
          </div>
          <div id="history_week" class="plot_container" style="display:none">
            $plots('week')
          </div>
          <div id="history_month" class="plot_container" style="display:none">
            $plots('month')
          </div>
          <div id="history_year" class="plot_container" style="display:none">
            $plots('year')
          </div>
        </div>
      </div>
    </div>

    <p class="footnote">
      This station is controlled by <a href="http://weewx.com/">WeeWX</a>, an
      experimental weather software system written in Python.
    </p>

    #include "analytics.inc"

</body>

</html>
